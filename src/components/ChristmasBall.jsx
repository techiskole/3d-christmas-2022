/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import React, { useRef } from "react";

export function ChristmasBall(props) {
  const { nodes, materials } = useGLTF("/christmas_ball.gltf");
  const ref = useRef();
  const { viewport, camera } = useThree();
  const { height } = viewport.getCurrentViewport(camera, [
    0,
    0,
    props.position[2],
  ]);

  useFrame(() => {
    ref.current.rotation.x += 0.001;
    ref.current.rotation.y += 0.001;
    ref.current.position.y += 0.01;
    if (ref.current.position.y > height / 1.4) {
      ref.current.position.y = -height / 1.4;
    }
  });

  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh geometry={nodes.Sphere003_1.geometry}>
        <meshStandardMaterial
          {...materials.Red_Glitter}
          color={props.color}
          envMapIntensity={4}
          roughness={0.2}
        />
      </mesh>
      <mesh
        geometry={nodes.Sphere003_2.geometry}
        material={materials["SilverMetal.002"]}
        material-color="gold"
      />
    </group>
  );
}

useGLTF.preload("/christmas_ball.gltf");
